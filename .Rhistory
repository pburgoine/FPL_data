if (length(player_captain ) > 0){result[[i+40]][row_numb] <- player_captain}
if (player<12) {result[[i+78]][row_numb] <- "Played"} else {result[[i+78]][row_numb] <- "Bench"}
row_numb=row_numb+1
#print(row_numb)
}
}
for (i in index){
#Check through gameweeks
for (player in players){
print(paste("GW",i,sep=": "))
print(player)
player_pos <- paste("#ismr-pos", player,sep="")
player_name <- myGameweeks[[i]] %>% html_nodes(player_pos) %>% html_nodes(".ism-element__name") %>% html_text()
player_data <- myGameweeks[[i]] %>% html_nodes(player_pos) %>% html_nodes(".ism-element__data") %>% html_text()
player_shirt <- myGameweeks[[i]] %>% html_nodes(player_pos) %>% html_nodes(".ism-element__shirt")
player_team <- html_attr(player_shirt, "title")
print(player_team)
print(player_name)
player_cap = myGameweeks[[i]] %>% html_nodes(player_pos) %>% html_nodes(".ism-element__control--captain") %>% html_nodes(".ism-element__icon")
player_captain = html_attr(player_cap, "title")
#print(player_captain)
result$Player[row_numb] <- player_name
result[[i+2]][row_numb] <- player_data
result$Team[row_numb] <- player_team
if (length(player_captain ) > 0){result[[i+40]][row_numb] <- player_captain}
if (player<12) {result[[i+78]][row_numb] <- "Played"} else {result[[i+78]][row_numb] <- "Bench"}
row_numb=row_numb+1
#print(row_numb)
}
}
for (i in index){
#Check through gameweeks
for (player in players){
print(paste("GW",i,sep=": "))
print(player)
player_pos <- paste("#ismr-pos", player,sep="")
player_name <- myGameweeks[[i]] %>% html_nodes(player_pos) %>% html_nodes(".ism-element__name") %>% html_text()
player_data <- myGameweeks[[i]] %>% html_nodes(player_pos) %>% html_nodes(".ism-element__data") %>% html_text()
player_shirt <- myGameweeks[[i]] %>% html_nodes(player_pos) %>% html_nodes(".ism-element__shirt")
player_team <- html_attr(player_shirt, "title")
print(player_name)
print(player_data)
player_cap = myGameweeks[[i]] %>% html_nodes(player_pos) %>% html_nodes(".ism-element__control--captain") %>% html_nodes(".ism-element__icon")
player_captain = html_attr(player_cap, "title")
#print(player_captain)
result$Player[row_numb] <- player_name
result[[i+2]][row_numb] <- player_data
result$Team[row_numb] <- player_team
if (length(player_captain ) > 0){result[[i+40]][row_numb] <- player_captain}
if (player<12) {result[[i+78]][row_numb] <- "Played"} else {result[[i+78]][row_numb] <- "Bench"}
row_numb=row_numb+1
#print(row_numb)
}
}
for (i in index){
#Check through gameweeks
for (player in players){
print(paste("GW",i,sep=": "))
print(player)
player_pos <- paste("#ismr-pos", player,sep="")
player_name <- myGameweeks[[i]] %>% html_nodes(player_pos) %>% html_nodes(".ism-element__name") %>% html_text()
player_data <- myGameweeks[[i]] %>% html_nodes(player_pos) %>% html_nodes(".ism-element__data") %>% html_text()
player_shirt <- myGameweeks[[i]] %>% html_nodes(player_pos) %>% html_nodes(".ism-element__shirt")
player_team <- html_attr(player_shirt, "title")
print(player_name)
print(player_data)
player_cap = myGameweeks[[i]] %>% html_nodes(player_pos) %>% html_nodes(".ism-element__control--captain") %>% html_nodes(".ism-element__icon")
player_captain = html_attr(player_cap, "title")
#print(player_captain)
result$Player[row_numb] <- player_name
result[[i+2]][row_numb] <- player_data
result$Team[row_numb] <- player_team
if (length(player_captain ) > 0){result[[i+40]][row_numb] <- player_captain}
if (player<12) {result[[i+78]][row_numb] <- "Played"} else {result[[i+78]][row_numb] <- "Bench"}
row_numb=row_numb+1
#print(row_numb)
}
}
for (i in index){
print(i)
#Check through gameweeks
for (player in players){
print(paste("GW",i,sep=": "))
print(player)
player_pos <- paste("#ismr-pos", player,sep="")
player_name <- myGameweeks[[i]] %>% html_nodes(player_pos) %>% html_nodes(".ism-element__name") %>% html_text()
player_data <- myGameweeks[[i]] %>% html_nodes(player_pos) %>% html_nodes(".ism-element__data") %>% html_text()
player_shirt <- myGameweeks[[i]] %>% html_nodes(player_pos) %>% html_nodes(".ism-element__shirt")
player_team <- html_attr(player_shirt, "title")
print(player_name)
print(player_data)
player_cap = myGameweeks[[i]] %>% html_nodes(player_pos) %>% html_nodes(".ism-element__control--captain") %>% html_nodes(".ism-element__icon")
player_captain = html_attr(player_cap, "title")
#print(player_captain)
result$Player[row_numb] <- player_name
result[[i+2]][row_numb] <- player_data
result$Team[row_numb] <- player_team
if (length(player_captain ) > 0){result[[i+40]][row_numb] <- player_captain}
if (player<12) {result[[i+78]][row_numb] <- "Played"} else {result[[i+78]][row_numb] <- "Bench"}
row_numb=row_numb+1
#print(row_numb)
}
}
myGameweeks
for (i in index){
print(i)
#Check through gameweeks
for (player in players){
print(paste("GW",i,sep=": "))
print(player)
player_pos <- paste("#ismr-pos", player,sep="")
player_name <- myGameweeks[[i]][2] %>% html_nodes(player_pos) %>% html_nodes(".ism-element__name") %>% html_text()
player_data <- myGameweeks[[i]][2] %>% html_nodes(player_pos) %>% html_nodes(".ism-element__data") %>% html_text()
player_shirt <- myGameweeks[[i]][2] %>% html_nodes(player_pos) %>% html_nodes(".ism-element__shirt")
player_team <- html_attr(player_shirt, "title")
print(player_name)
print(player_data)
player_cap = myGameweeks[[i]][2] %>% html_nodes(player_pos) %>% html_nodes(".ism-element__control--captain") %>% html_nodes(".ism-element__icon")
player_captain = html_attr(player_cap, "title")
#print(player_captain)
result$Player[row_numb] <- player_name
result[[i+2]][row_numb] <- player_data
result$Team[row_numb] <- player_team
if (length(player_captain ) > 0){result[[i+40]][row_numb] <- player_captain}
if (player<12) {result[[i+78]][row_numb] <- "Played"} else {result[[i+78]][row_numb] <- "Bench"}
row_numb=row_numb+1
#print(row_numb)
}
}
for (i in index){
print(i)
#Check through gameweeks
for (player in players){
print(paste("GW",i,sep=": "))
print(player)
player_pos <- paste("#ismr-pos", player,sep="")
player_name <- myGameweeks[[i]] %>% html_nodes(player_pos) %>% html_nodes(".ism-element__name") %>% html_text()
player_data <- myGameweeks[[i]] %>% html_nodes(player_pos) %>% html_nodes(".ism-element__data") %>% html_text()
player_shirt <- myGameweeks[[i]] %>% html_nodes(player_pos) %>% html_nodes(".ism-element__shirt")
player_team <- html_attr(player_shirt, "title")
print(player_name)
print(player_data)
player_cap = myGameweeks[[i]] %>% html_nodes(player_pos) %>% html_nodes(".ism-element__control--captain") %>% html_nodes(".ism-element__icon")
player_captain = html_attr(player_cap, "title")
#print(player_captain)
result$Player[row_numb] <- player_name
result[[i+2]][row_numb] <- player_data
result$Team[row_numb] <- player_team
if (length(player_captain ) > 0){result[[i+40]][row_numb] <- player_captain}
if (player<12) {result[[i+78]][row_numb] <- "Played"} else {result[[i+78]][row_numb] <- "Bench"}
row_numb=row_numb+1
#print(row_numb)
}
}
player_name <- myGameweeks[[1]] %>% html_nodes(player_pos) %>% html_nodes(".ism-element__name") %>% html_text()
myGameweeks[[1]] %>% html_nodes(player_pos) %>% html_nodes(".ism-element__name") %>% html_text()
myGameweeks[[2]] %>% html_nodes(player_pos) %>% html_nodes(".ism-element__name") %>% html_text()
myGameweeks[[3]] %>% html_nodes(player_pos) %>% html_nodes(".ism-element__name") %>% html_text()
myGameweeks[[5]] %>% html_nodes(player_pos) %>% html_nodes(".ism-element__name") %>% html_text()
myGameweeks[[99]] %>% html_nodes(player_pos) %>% html_nodes(".ism-element__name") %>% html_text()
myGameweeks[[99]] %>% html_nodes(player_pos) %>% html_nodes(".ism-element__name") %>% html_text()
myGameweeks[[37]] %>% html_nodes(player_pos) %>% html_nodes(".ism-element__name") %>% html_text()
myGameweeks[[38]] %>% html_nodes(player_pos) %>% html_nodes(".ism-element__name") %>% html_text()
myGameweeks[[20]] %>% html_nodes(player_pos) %>% html_nodes(".ism-element__name") %>% html_text()
myGameweeks[[4]] %>% html_nodes(player_pos) %>% html_nodes(".ism-element__name") %>% html_text()
myGameweeks[[1:38]] %>% html_nodes(player_pos) %>% html_nodes(".ism-element__name") %>% html_text()
myGameweeks[[8]] %>% html_nodes(player_pos) %>% html_nodes(".ism-element__name") %>% html_text()
myGameweeks[[14]] %>% html_nodes(player_pos) %>% html_nodes(".ism-element__name") %>% html_text()
myGameweeks[[1]] %>% html_nodes(player_pos) %>% html_nodes(".ism-element__name") %>% html_text()
myGameweeks[[1]] %>% html_nodes(player_pos) %>% html_nodes(".ism-element__name") %>% html_text()
myGameweeks[[1]] %>% html_nodes(player_pos) %>% html_nodes(".ism-element__name") %>% html_text()
player_data <- myGameweeks[[i]] %>% html_nodes(player_pos) %>% html_nodes(".ism-element__data") %>% html_text()
player_data
myGameweeks[[1]] %>% html_nodes(player_pos) %>% html_nodes(".ism-element__data") %>% html_text()
myGameweeks[[2]] %>% html_nodes(player_pos) %>% html_nodes(".ism-element__data") %>% html_text()
myGameweeks[[3]] %>% html_nodes(player_pos) %>% html_nodes(".ism-element__data") %>% html_text()
myGameweeks[[4]] %>% html_nodes(player_pos) %>% html_nodes(".ism-element__data") %>% html_text()
myGameweeks[[4]] %>% html_nodes(player_pos) %>% html_nodes(".ism-element__data") %>% html_text()
myGameweeks[[5]] %>% html_nodes(player_pos) %>% html_nodes(".ism-element__data") %>% html_text()
myGameweeks[[6]] %>% html_nodes(player_pos) %>% html_nodes(".ism-element__data") %>% html_text()
myGameweeks[[7]] %>% html_nodes(player_pos) %>% html_nodes(".ism-element__data") %>% html_text()
myGameweeks[[36]] %>% html_nodes(player_pos) %>% html_nodes(".ism-element__data") %>% html_text()
#Set up
fpl_data <- data.frame()
player <- c(1:1000)
captain <- c(NA)
result <- matrix(NA,nrow = 1000, ncol = 116)
result <- as.data.frame(result)
names(result) <- c("Player", "Team", paste0("GW", 1:38),paste0("CAP", 1:38),paste0("PLAY", 1:38))
players <- c(1:15)
index <- c(2:38)
urls <- c(1:38)
url <- "http://fantasy.premierleague.com/a/team/1537030/event/"
row_numb = 1
myGameweeks <- list()
for (i in index){
urls[i] = paste(url, i, sep="")
# render HTML from the site with phantomjs
writeLines(sprintf("var page = require('webpage').create();
page.open('%s', function () {
console.log(page.content); //page source
phantom.exit();
});", urls[i]), con="scrape.js")
system("phantomjs scrape.js > scrape.html")
# extract the content you need
myGameweeks[[i]] <- read_html("scrape.html")
#print(pg)
}
for (i in index){
print(i)
#Check through gameweeks
for (player in players){
print(paste("GW",i,sep=": "))
print(player)
player_pos <- paste("#ismr-pos", player,sep="")
player_name <- myGameweeks[[i]] %>% html_nodes(player_pos) %>% html_nodes(".ism-element__name") %>% html_text()
player_data <- myGameweeks[[i]] %>% html_nodes(player_pos) %>% html_nodes(".ism-element__data") %>% html_text()
player_shirt <- myGameweeks[[i]] %>% html_nodes(player_pos) %>% html_nodes(".ism-element__shirt")
player_team <- html_attr(player_shirt, "title")
print(player_name)
print(player_data)
player_cap = myGameweeks[[i]] %>% html_nodes(player_pos) %>% html_nodes(".ism-element__control--captain") %>% html_nodes(".ism-element__icon")
player_captain = html_attr(player_cap, "title")
#print(player_captain)
result$Player[row_numb] <- player_name
result[[i+2]][row_numb] <- player_data
result$Team[row_numb] <- player_team
if (length(player_captain ) > 0){result[[i+40]][row_numb] <- player_captain}
if (player<12) {result[[i+78]][row_numb] <- "Played"} else {result[[i+78]][row_numb] <- "Bench"}
row_numb=row_numb+1
#print(row_numb)
}
}
myGameweeks[[36]] %>% html_nodes(player_pos) %>% html_nodes(".ism-element__data") %>% html_text()
myGameweeks[[1]] %>% html_nodes(player_pos) %>% html_nodes(".ism-element__data") %>% html_text()
install.packages("flexdashboard", type = "source")
install.packages('rsconnect')
rsconnect::setAccountInfo(name='pburgoine',
token='B7D544622F986E67F3F58AD6C688FF38',
secret='<SECRET>')
rsconnect::setAccountInfo(name='pburgoine', token='B7D544622F986E67F3F58AD6C688FF38', secret='jShmMH+/Vj2tde+Ysw8C+QCbJlU1eT4kCVRRrCSu')
install.packages(c('ggplot2', 'shiny'))
setwd("~/Test Shiny App")
library(shiny)
runApp()
setwd("~/FPL_data")
urlfile<-'http://github.com/pburgoine/FPL_data/blob/master/FPLdata1617.csv'
dsin<-read.csv(urlfile)
View(dsin)
View(dsin)
urlfile<-'https://raw.githubusercontent.com/pburgoine/FPL_data/master/FPLdata1617.csv'
dsin<-read.csv(urlfile)
setwd("~/FPL_data")
setwd("~/FPL_data")
dataset <- reactive({
diamonds[sample(nrow(diamonds), input$sampleSize),]
})
dataset <- reactive({
diamonds[sample(nrow(diamonds), input$sampleSize),]
})
dataset <- reactive({
diamonds[sample(nrow(diamonds), input$sampleSize),]
})
urlfile<-'https://raw.githubusercontent.com/pburgoine/FPL_data/master/FPLdata1617.csv'
dsin<-read.csv(urlfile)
dsin[1]
dsin[,1]
dsin[1]
keepcol <- c("Team")
dsin[keepcol]
runApp()
library(shiny)
runApp()
library(shiny)
library(shiny)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
urlfile<-'http://raw.githubusercontent.com/pburgoine/FPL_data/master/FPLdata1617.csv'
dsin<-read.csv(urlfile)
keepCols <- reactive({c("Player","Team",paste("GW",1),paste("CAP",1),paste("PLAY",1))})
dataset <- reactive({
dsin[keepCols]
})
dataset
dsin[keepCols()]
dsin[keepCols]
dsin[Team]
dsin<-dsin[Team]
test <- subset(dsin, select=keepCols)
keepCols <- reactive({c("Player","Team",paste("GW",1),paste("CAP",1),paste("PLAY",1))})
keepCols <- c("Player","Team",paste("GW",1),paste("CAP",1),paste("PLAY",1))
test <- subset(dsin, select=keepCols)
keepCols <- c("Player","Team",paste("GW",1,sep=""),paste("CAP",1,sep=""),paste("PLAY",1,sep=""))
test <- subset(dsin, select=keepCols)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
newd<-dsin
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
devtools::install_github("jcheng5/bubbles")
runApp()
install.packages("packcircles")
runApp()
runApp()
runif(26)
runApp()
View(dsin)
View(dsin)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
urlfile<-'http://raw.githubusercontent.com/pburgoine/FPL_data/master/FPLdata1617.csv'
dsin<-read.csv(urlfile)
as.character(dsin$Color)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
urlfile<-'http://raw.githubusercontent.com/pburgoine/FPL_data/master/FPLdata1617.csv'
dsin<-read.csv(urlfile)
dsin$Color<-as.character(dsin$Color)
keepCols <- reactive({c("Player","Team","Color",paste("GW",input$gameWeek,sep=""),paste("CAP",input$gameWeek,sep=""),paste("PLAY",input$gameWeek,sep=""))})
dataset <- reactive({subset(dsin,select=keepCols())})
p <- circleProgressiveLayout(dataset()[,4])
d <- circleLayoutVertices(p)
h<-ggplot(d, aes(x, y), fill = factor(dataset()$Team)) +
geom_polygon(aes(group = id), show.legend = FALSE) +
geom_text(data = p, aes(x, y), label = paste(dataset()$Player,dataset()[,4],"points",sep=" ")) +
theme_void()
print(h)
urlfile<-'http://raw.githubusercontent.com/pburgoine/FPL_data/master/FPLdata1617.csv'
dsin<-read.csv(urlfile)
dsin$Color<-as.character(dsin$Color)
keepCols <- c("Player","Team","Color","GW1")
dataset <- subset(dsin,select=keepCols())
keepCols <- c("Player","Team","Color","GW1")
dataset <- subset(dsin,select=keepCols
)
p <- circleProgressiveLayout(dataset()[,4])
d <- circleLayoutVertices(p)
h<-ggplot(d, aes(x, y), fill = factor(dataset()$Team)) +
geom_polygon(aes(group = id), show.legend = FALSE) +
geom_text(data = p, aes(x, y), label = paste(dataset()$Player,dataset()[,4],"points",sep=" ")) +
theme_void()
print(h)
h<-ggplot(d, aes(x, y), fill = factor(dataset$Team)) +
geom_polygon(aes(group = id), show.legend = FALSE) +
geom_text(data = p, aes(x, y), label = paste(dataset$Player,dataset[,4],"points",sep=" ")) +
theme_void()
print(h)
p <- circleProgressiveLayout(dataset[,4])
d <- circleLayoutVertices(p)
h<-ggplot(d, aes(x, y), fill = factor(dataset$Team)) +
geom_polygon(aes(group = id), show.legend = FALSE) +
geom_text(data = p, aes(x, y), label = paste(dataset$Player,dataset[,4],"points",sep=" ")) +
theme_void()
print(h)
p <- circleProgressiveLayout(dataset[,4])
d <- circleLayoutVertices(p)
h<-ggplot(d, aes(x, y), fill = factor(dataset$Team)) +
geom_polygon(aes(group = id), show.legend = FALSE) +
geom_text(data = p, aes(x, y), label = paste(dataset$Player,dataset[,4],"points",sep=" ")) +
scale_color_manual(values = dsin$Color) +
scale_fill_manual(values = dsin$Color) +
theme_void()
print(h)
View(dsin)
View(dsin)
dataset <- subset(dataset, !is.na(dataset$GW1))
p <- circleProgressiveLayout(dataset[,4])
d <- circleLayoutVertices(p)
h<-ggplot(d, aes(x, y), fill = factor(dataset$Team)) +
geom_polygon(aes(group = id), show.legend = FALSE) +
geom_text(data = p, aes(x, y), label = paste(dataset$Player,dataset[,4],"points",sep=" ")) +
scale_color_manual(values = dsin$Color) +
scale_fill_manual(values = dsin$Color) +
theme_void()
print(h)
keepCols <- c("Player","Team","Color","GW2")
dataset <- subset(dsin,select=keepCols)
dataset <- subset(dataset, !is.na(dataset$GW1))
p <- circleProgressiveLayout(dataset[,4])
d <- circleLayoutVertices(p)
h<-ggplot(d, aes(x, y), fill = factor(dataset$Team)) +
geom_polygon(aes(group = id), show.legend = FALSE) +
geom_text(data = p, aes(x, y), label = paste(dataset$Player,dataset[,4],"points",sep=" ")) +
scale_color_manual(values = dsin$Color) +
scale_fill_manual(values = dsin$Color) +
theme_void()
print(h)
dsin<-read.csv(urlfile)
dsin$Color<-as.character(dsin$Color)
keepCols <- c("Player","Team","Color","GW2")
dataset <- subset(dsin,select=keepCols)
dataset <- subset(dataset, !is.na(dataset$GW2))
p <- circleProgressiveLayout(dataset[,4])
d <- circleLayoutVertices(p)
h<-ggplot(d, aes(x, y), fill = factor(dataset$Team)) +
geom_polygon(aes(group = id), show.legend = FALSE) +
geom_text(data = p, aes(x, y), label = paste(dataset$Player,dataset[,4],"points",sep=" ")) +
scale_color_manual(values = dsin$Color) +
scale_fill_manual(values = dsin$Color) +
theme_void()
print(h)
col_list<-c("#FF222C", "#1DFBFF", "#FDFF24", "#2CFF18", "#FF38F4", "#C3C4C9", "#000000","#FF222C", "#1DFBFF", "#FDFF24", "#2CFF18", "#FF38F4", "#C3C4C9", "#000000","#000000")
dataset <- subset(dsin,select=keepCols)
keepCols <- c("Player","Team","Color","GW2")
col_list<-c("#FF222C", "#1DFBFF", "#FDFF24", "#2CFF18", "#FF38F4", "#C3C4C9", "#000000","#FF222C", "#1DFBFF", "#FDFF24", "#2CFF18", "#FF38F4", "#C3C4C9", "#000000","#000000")
dataset <- subset(dsin,select=keepCols)
dataset <- subset(dataset, !is.na(dataset$GW2))
p <- circleProgressiveLayout(dataset[,4])
d <- circleLayoutVertices(p)
h<-ggplot(d, aes(x, y), fill = factor(dataset$Team)) +
geom_polygon(aes(group = id), show.legend = FALSE) +
geom_text(data = p, aes(x, y), label = paste(dataset$Player,dataset[,4],"points",sep=" ")) +
scale_color_manual(values = col_list) +
scale_fill_manual(values = col_list) +
theme_void()
print(h)
View(dataset)
View(dataset)
dsin<-read.csv(urlfile)
dsin$Color<-as.character(dsin$Color)
keepCols <- c("Player","Team","Color","GW1")
col_list<-c("#FF222C", "#1DFBFF", "#FDFF24", "#2CFF18", "#FF38F4", "#C3C4C9", "#000000","#FF222C", "#1DFBFF", "#FDFF24", "#2CFF18", "#FF38F4", "#C3C4C9", "#000000","#000000")
dataset <- subset(dsin,select=keepCols)
dataset <- subset(dataset, !is.na(dataset$GW1))
p <- circleProgressiveLayout(dataset[,4])
d <- circleLayoutVertices(p)
h<-ggplot(d, aes(x, y), fill = factor(dataset$Team)) +
geom_polygon(aes(group = id), show.legend = FALSE) +
geom_text(data = p, aes(x, y), label = paste(dataset$Player,dataset[,4],"points",sep=" ")) +
scale_color_manual(values = col_list) +
scale_fill_manual(values = col_list) +
theme_void()
print(h)
p <- circleProgressiveLayout(dataset[,4])
d <- circleLayoutVertices(p)
h<-ggplot(d, aes(x, y), col = factor(dataset$Team), fill = factor(dataset$Team)) +
geom_polygon(aes(group = id), show.legend = FALSE) +
geom_text(data = p, aes(x, y), label = paste(dataset$Player,dataset[,4],"points",sep=" ")) +
scale_color_manual(values = col_list) +
scale_fill_manual(values = col_list) +
theme_void()
print(h)
h<-ggplot(d, aes(x, y), col = factor(dataset$Team), fill = factor(dataset$Team)) +
geom_polygon(aes(group = id), show.legend = FALSE) +
geom_text(data = p, aes(x, y), label = paste(dataset$Player,dataset[,4],"points",sep=" ")) +
theme_void()
print(h)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?bubbles::renderBubbles
?bubbles::bubbles
?bubbles::renderBubbles
?bubbles::bubbles
runApp()
install.packages(dplyr)
runApp()
runApp()
install.packages("dplyr")
devtools::install_github("hadley/shinySignals")
runApp()
runApp()
